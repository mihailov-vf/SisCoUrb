<?php

namespace Siscourb\User\Controller;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-24 at 21:01:50.
 */
class UserControllerFactoryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var UserControllerFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new UserControllerFactory;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Siscourb\User\Controller\UserControllerFactory::createService
     * @todo   Implement testCreateService().
     */
    public function testCreateService()
    {
        $userMapper = \Mockery::mock('Doctrine\ORM\EntityRepository');

        $serviceLocator = \Mockery::mock('Zend\ServiceManager\ServiceManager');

        $serviceLocator = \Mockery::mock('Zend\ServiceManager\ServiceManager');
        $serviceLocator->shouldReceive('get')
                ->with('Siscourb\User\Mapper\UserMapper')->once()->andReturn($userMapper);

        $controllerManager = \Mockery::mock('Zend\Mvc\Controller\ControllerManager');
        $controllerManager->shouldReceive('getServiceLocator')->once()->andReturn($serviceLocator);

        $taskControllerFactory = new UserControllerFactory();

        $this->assertInstanceOf(
            'Siscourb\User\Controller\UserController',
            $taskControllerFactory->createService($controllerManager)
        );
    }
}
