<?php

namespace Siscourb\Group\Entity;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-15 at 11:02:15.
 */
class ContactTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Contact
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Contact;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Siscourb\Group\Entity\Contact::getId
     * @covers Siscourb\Group\Entity\Contact::setId
     */
    public function testGetAndSetId()
    {
        $this->assertAttributeEmpty('id', $this->object);
        $this->assertEmpty($this->object->getId());

        $this->object->setId(1);
        $this->assertEquals(1, $this->object->getId());
    }

    /**
     * @covers Siscourb\Group\Entity\Contact::getOrganization
     * @covers Siscourb\Group\Entity\Contact::setOrganization
     */
    public function testGetAndSetOrganization()
    {
        $this->assertAttributeEmpty('organization', $this->object);
        $this->assertEmpty($this->object->getOrganization());

        $organization = \Mockery::mock(new Organization());

        $this->object->setOrganization($organization);
        $this->assertAttributeInstanceOf('Siscourb\Group\Entity\Organization', 'organization', $this->object);
        $this->assertEquals($organization, $this->object->getOrganization());
    }

    /**
     * @covers Siscourb\Group\Entity\Contact::getType
     * @covers Siscourb\Group\Entity\Contact::setType
     */
    public function testGetAndSetType()
    {
        $this->assertAttributeEmpty('type', $this->object);
        $this->assertEmpty($this->object->getType());

        $this->object->setType('email');
        $this->assertEquals('email', $this->object->getType());
    }

    /**
     * @covers Siscourb\Group\Entity\Contact::getValue
     * @covers Siscourb\Group\Entity\Contact::setValue
     */
    public function testGetAndSetValue()
    {
        $this->assertAttributeEmpty('value', $this->object);
        $this->assertEmpty($this->object->getValue());

        $this->object->setValue('joe@joe.com');
        $this->assertEquals('joe@joe.com', $this->object->getValue());
    }

    /**
     * @covers Siscourb\Group\Entity\Contact::getNotes
     * @covers Siscourb\Group\Entity\Contact::setNotes
     */
    public function testGetAndSetNotes()
    {
        $this->assertAttributeEmpty('notes', $this->object);
        $this->assertEmpty($this->object->getNotes());

        $expected = str_pad('', 1000, 'Lorem Ipsum ');
        $this->object->setNotes($expected);
        $this->assertEquals($expected, $this->object->getNotes());
    }
}
