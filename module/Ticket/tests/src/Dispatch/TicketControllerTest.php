<?php

namespace Siscourb\Ticket\Dispatch;

use Zend\Test\PHPUnit\Controller\AbstractHttpControllerTestCase;
use DoctrineDataFixtureModule\Loader\ServiceLocatorAwareLoader;
use Doctrine\Common\DataFixtures\Executor\ORMExecutor;
use Doctrine\Common\DataFixtures\Purger\ORMPurger;
use Doctrine\ORM\Tools\SchemaTool;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-20 at 16:32:46.
 */
class TicketControllerTest extends AbstractHttpControllerTestCase
{

    public function setUp()
    {
        parent::setUp();

        $this->setApplicationConfig(include 'config/application.config.php');

        $serviceLocator = $this->getApplicationServiceLocator();

        /** @var $entityManager \Doctrine\ORM\EntityManager */
        $entityManager = $serviceLocator->get('Doctrine\ORM\EntityManager');

        // Instantiate Schema Tool
        $tool = new SchemaTool($entityManager);

        $classes = $entityManager->getMetaDataFactory()->getAllMetaData();

        // Drop and Recreate Database
        $tool->dropSchema($classes);
        $tool->createSchema($classes);

        // Instantiate Fixture Executor
        $loader = new ServiceLocatorAwareLoader($serviceLocator);
        $executor = new ORMExecutor($entityManager, new ORMPurger());
        // Get Fixture Config
        $applicationConfig = $serviceLocator->get('Config');
        $fixturePaths = $applicationConfig['doctrine']['fixture'];
        // Load Fixtures From Directories
        foreach ($fixturePaths as $value) {
            $loader->loadFromDirectory($value);
        }
        // Execute Fixtures
        $executor->execute($loader->getFixtures());

        //TODO Adicionar autenticação
    }

    public function testListActionCanBeAccessed()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $this->dispatch('/ticket');
        $this->assertMatchedRouteName('ticket');
        $this->assertControllerName('Siscourb\Ticket\Controller\Ticket');
        $this->assertControllerClass('TicketController');
        $this->assertActionName('list');
        $this->assertResponseStatusCode(200);
    }
}
