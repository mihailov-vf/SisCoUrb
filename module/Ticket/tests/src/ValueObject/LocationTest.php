<?php

namespace Siscourb\Ticket\ValueObject;

use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-15 at 21:17:34.
 */
class LocationTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var Location
     */
    protected $location;

    /**
     *
     * @var Point
     */
    protected $point;

    /**
     *
     * @var string
     */
    protected $address;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->point = array('lat' => -23.550389, 'lon' => -46.633973);
        $this->address = 'Marco zero de São Paulo - Praça da Sé';
        $this->location = new Location($this->point['lat'], $this->point['lon'], $this->address);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Siscourb\Ticket\ValueObject\Location::__construct
     */
    public function testConstructParams()
    {
        $this->assertAttributeSame($this->point['lat'], 'latitude', $this->location);
        $this->assertAttributeSame($this->point['lon'], 'longitude', $this->location);
        $this->assertAttributeSame($this->address, 'address', $this->location);
    }

    /**
     * @covers Siscourb\Ticket\ValueObject\Location::getLatitude
     */
    public function testGetLatitude()
    {
        $this->assertSame($this->point['lat'], $this->location->getLatitude());
    }
    
    /**
     * @covers Siscourb\Ticket\ValueObject\Location::getLongitude
     */
    public function testGetLongitude()
    {
        $this->assertSame($this->point['lon'], $this->location->getLongitude());
    }

    /**
     * @covers Siscourb\Ticket\ValueObject\Location::getAddress
     */
    public function testGetAddress()
    {
        $this->assertSame($this->address, $this->location->getAddress());
    }
}
