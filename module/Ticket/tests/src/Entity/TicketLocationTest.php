<?php

namespace Siscourb\Ticket\Entity;

use Mockery;
use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-15 at 21:17:34.
 */
class TicketLocationTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var TicketLocation
     */
    protected $location;

    /**
     * @var Ticket
     */
    protected $ticket;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->ticket = Mockery::mock('Siscourb\Ticket\Entity\Ticket')->makePartial();
        $this->location = new TicketLocation($this->ticket);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Siscourb\Ticket\Entity\TicketLocation::__construct
     */
    public function testConstructParams()
    {
        $this->assertAttributeSame($this->ticket, 'ticket', $this->location);
    }

    /**
     * @covers Siscourb\Ticket\Entity\TicketLocation::getPoint
     */
    public function testGetAndSetPoint()
    {
        $this->assertEmpty($this->location->getPoint());
    }

    /**
     * @covers Siscourb\Ticket\Entity\TicketLocation::getAddress
     */
    public function testGetAddress()
    {
        $this->assertEmpty($this->location->getAddress());
    }

    /**
     * @covers Siscourb\Ticket\Entity\TicketLocation::getTicket
     */
    public function testGetTicket()
    {
        $this->assertSame($this->ticket, $this->location->getTicket());
    }

    /**
     * @covers Siscourb\Ticket\Entity\TicketLocation::changeLocation
     * @covers Siscourb\Ticket\Entity\TicketLocation::setPoint
     * @covers Siscourb\Ticket\Entity\TicketLocation::setAddress
     */
    public function testChangeLocation()
    {
        $point = Mockery::mock('Siscourb\Ticket\ValueObject\Point');
        $address = 'R. SÃ£o jorge, 156';

        $this->location->changeLocation($point, $address);

        $this->assertAttributeSame($point, 'point', $this->location);
        $this->assertAttributeSame($address, 'address', $this->location);
    }
}
