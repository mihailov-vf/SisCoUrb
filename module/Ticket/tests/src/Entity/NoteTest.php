<?php

namespace Siscourb\Ticket\Entity;

use Mockery;
use PHPUnit_Framework_TestCase;
use Siscourb\User\Entity\User;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-15 at 21:17:33.
 */
class NoteTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var Note
     */
    protected $note;

    /**
     * @var User
     */
    protected $user;

    /**
     * @var Ticket
     */
    protected $ticket;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->user = new User();
        $this->ticket = Mockery::mock('Siscourb\Ticket\Entity\Ticket');
        $this->note = new Note($this->ticket, $this->user);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Siscourb\Ticket\Entity\Note::__construct
     */
    public function testConstructParams()
    {
        $this->assertAttributeSame($this->ticket, 'ticket', $this->note);
        $this->assertAttributeSame($this->user, 'user', $this->note);
    }

    /**
     * @covers Siscourb\Ticket\Entity\Note::getId
     * @covers Siscourb\Ticket\Entity\Note::setId
     */
    public function testGetAndSetId()
    {
        $this->note->setId(1);
        $this->assertAttributeSame(1, 'id', $this->note);

        $this->assertSame(1, $this->note->getId());
    }

    /**
     * @covers Siscourb\Ticket\Entity\Note::getTitle
     * @covers Siscourb\Ticket\Entity\Note::setTitle
     */
    public function testGetAndSetTitle()
    {
        $expected = 'Atrasado';
        $this->note->setTitle($expected);
        $this->assertAttributeSame($expected, 'title', $this->note);

        $this->assertSame($expected, $this->note->getTitle());
    }

    /**
     * @covers Siscourb\Ticket\Entity\Note::getDescription
     * @covers Siscourb\Ticket\Entity\Note::setDescription
     */
    public function testGetAndSetDescription()
    {
        $expected = 'Obra atrasada; Gostaria de um retorno.';
        $this->note->setDescription($expected);
        $this->assertAttributeSame($expected, 'description', $this->note);

        $this->assertSame($expected, $this->note->getDescription());
    }
    
    /**
     * @covers Siscourb\Ticket\Entity\Note::getUser
     */
    public function testGetUser()
    {
        $this->assertSame($this->user, $this->note->getUser());
    }
    
    public function testGetTicket()
    {
        $this->assertSame($this->ticket, $this->note->getTicket());
    }
}
