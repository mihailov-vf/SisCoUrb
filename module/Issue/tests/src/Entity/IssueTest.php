<?php

namespace Siscourb\Issue\Entity;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-15 at 14:08:22.
 */
class IssueTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Issue
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Issue;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    public function testConstruct()
    {
        $this->assertAttributeInstanceOf(
            'Doctrine\Common\Collections\ArrayCollection',
            'categories',
            $this->object
        );
    }

    /**
     * @covers Siscourb\Issue\Entity\Issue::getId
     * @covers Siscourb\Issue\Entity\Issue::setId
     */
    public function testGetAndSetId()
    {
        $this->assertAttributeEmpty('id', $this->object);
        $this->assertEmpty($this->object->getId());

        $this->object->setId(1);
        $this->assertEquals(1, $this->object->getId());
    }

    /**
     * @covers Siscourb\Issue\Entity\Issue::getName
     * @covers Siscourb\Issue\Entity\Issue::setName
     */
    public function testGetAndSetName()
    {
        $this->assertAttributeEmpty('name', $this->object);
        $this->assertEmpty($this->object->getName());

        $expected = 'Street Littering';
        $this->object->setName($expected);
        $this->assertEquals($expected, $this->object->getName());
    }

    /**
     * @covers Siscourb\Issue\Entity\Issue::getDescription
     * @covers Siscourb\Issue\Entity\Issue::setDescription
     */
    public function testGetAndSetDescription()
    {
        $this->assertAttributeEmpty('description', $this->object);
        $this->assertEmpty($this->object->getDescription());

        $expected = 'Trash and debris thrown out on the street.';
        $this->object->setDescription($expected);
        $this->assertEquals($expected, $this->object->getDescription());
    }

    /**
     * @covers Siscourb\Issue\Entity\Issue::getCategories
     */
    public function testGetCategories()
    {
        $this->assertInstanceOf(
            'Doctrine\Common\Collections\ArrayCollection',
            $this->object->getCategories()
        );
        $this->assertAttributeCount(0, 'categories', $this->object);
    }

    /**
     * @covers Siscourb\Issue\Entity\Issue::addCategory
     */
    public function testAddCategory()
    {
        $this->assertAttributeCount(0, 'categories', $this->object);

        $category1 = new Category();
        $category2 = new Category();

        $this->object->addCategory($category1);
        $this->assertAttributeCount(1, 'categories', $this->object);
        
        $this->object->addCategory($category2);
        $this->assertAttributeCount(2, 'categories', $this->object);
        
        $this->assertAttributeContainsOnly('Siscourb\Issue\Entity\Category', 'categories', $this->object);
    }
}
